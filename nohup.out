Importing module 'gym_38' (/home/jijingtian/isaacgym/python/isaacgym/_bindings/linux-x86_64/gym_38.so)
Setting GYM_USD_PLUG_INFO_PATH to /home/jijingtian/isaacgym/python/isaacgym/_bindings/linux-x86_64/usd/plugInfo.json
PyTorch version 2.0.1+cu117
Device count 4
/home/jijingtian/isaacgym/python/isaacgym/_bindings/src/gymtorch
Using /home/jijingtian/.cache/torch_extensions/py38_cu117 as PyTorch extensions root...
Emitting ninja build file /home/jijingtian/.cache/torch_extensions/py38_cu117/gymtorch/build.ninja...
Building extension module gymtorch...
Allowing ninja to set a default number of workers... (overridable by setting the environment variable MAX_JOBS=N)
ninja: no work to do.
Not connected to PVD
+++ Using GPU PhysX
Physics Engine: PhysX
Physics Device: cuda:1
GPU Pipeline: enabled
Loading extension module gymtorch...
/home/jijingtian/miniconda3/envs/terrain/lib/python3.8/site-packages/torch/functional.py:504: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3483.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
graphics_device_id: -1
sim_device_id: 1
Num bodies:  17
Bodies:  ['base', 'FL_hip', 'FL_thigh', 'FL_calf', 'FL_foot', 'FR_hip', 'FR_thigh', 'FR_calf', 'FR_foot', 'RL_hip', 'RL_thigh', 'RL_calf', 'RL_foot', 'RR_hip', 'RR_thigh', 'RR_calf', 'RR_foot']
ActorCritic.__init__ got unexpected arguments, which will be ignored: ['init_noise_std']
Actor MLP: Sequential(
  (0): Linear(in_features=240, out_features=512, bias=True)
  (1): LeakyReLU(negative_slope=0.01)
  (2): Linear(in_features=512, out_features=256, bias=True)
  (3): LeakyReLU(negative_slope=0.01)
  (4): Linear(in_features=256, out_features=128, bias=True)
  (5): LeakyReLU(negative_slope=0.01)
  (6): Linear(in_features=128, out_features=12, bias=True)
)
Critic MLP: Sequential(
  (0): Linear(in_features=430, out_features=512, bias=True)
  (1): LeakyReLU(negative_slope=0.01)
  (2): Linear(in_features=512, out_features=256, bias=True)
  (3): LeakyReLU(negative_slope=0.01)
  (4): Linear(in_features=256, out_features=128, bias=True)
  (5): LeakyReLU(negative_slope=0.01)
  (6): Linear(in_features=128, out_features=1, bias=True)
)
Traceback (most recent call last):
  File "eval_noise.py", line 183, in <module>
    eval_all_noise(
  File "eval_noise.py", line 150, in eval_all_noise
    ppo_runner = Runner(env=env, train_cfg=train_cfg_dict,log_dir=None,device = args.rl_device)
  File "/home/jijingtian/project/LipsRobot/rsl_rl/runners/expert_runner.py", line 81, in __init__
    self.env.reset()
  File "/home/jijingtian/project/LipsRobot/legged_gym/envs/base/history_wrapper.py", line 43, in reset
    obs, privileged_obs = self.env.reset()
  File "/home/jijingtian/project/LipsRobot/legged_gym/envs/base/base_task.py", line 121, in reset
    self.reset_idx(torch.arange(self.num_envs, device=self.device))
  File "/home/jijingtian/project/LipsRobot/legged_gym/envs/base/legged_robot.py", line 192, in reset_idx
    self.reset_buf[env_ids] = 1
RuntimeError: Inplace update to inference tensor outside InferenceMode is not allowed.You can make a clone to get a normal tensor before doing inplace update.See https://github.com/pytorch/rfcs/pull/17 for more details.
Importing module 'gym_38' (/home/jijingtian/isaacgym/python/isaacgym/_bindings/linux-x86_64/gym_38.so)
Setting GYM_USD_PLUG_INFO_PATH to /home/jijingtian/isaacgym/python/isaacgym/_bindings/linux-x86_64/usd/plugInfo.json
PyTorch version 2.0.1+cu117
Device count 4
/home/jijingtian/isaacgym/python/isaacgym/_bindings/src/gymtorch
Using /home/jijingtian/.cache/torch_extensions/py38_cu117 as PyTorch extensions root...
Emitting ninja build file /home/jijingtian/.cache/torch_extensions/py38_cu117/gymtorch/build.ninja...
Building extension module gymtorch...
Allowing ninja to set a default number of workers... (overridable by setting the environment variable MAX_JOBS=N)
ninja: no work to do.
Not connected to PVD
+++ Using GPU PhysX
Physics Engine: PhysX
Physics Device: cuda:1
GPU Pipeline: enabled
Loading extension module gymtorch...
/home/jijingtian/miniconda3/envs/terrain/lib/python3.8/site-packages/torch/functional.py:504: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3483.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
graphics_device_id: -1
sim_device_id: 1
Num bodies:  17
Bodies:  ['base', 'FL_hip', 'FL_thigh', 'FL_calf', 'FL_foot', 'FR_hip', 'FR_thigh', 'FR_calf', 'FR_foot', 'RL_hip', 'RL_thigh', 'RL_calf', 'RL_foot', 'RR_hip', 'RR_thigh', 'RR_calf', 'RR_foot']
ActorCritic.__init__ got unexpected arguments, which will be ignored: ['init_noise_std']
Actor MLP: Sequential(
  (0): Linear(in_features=240, out_features=512, bias=True)
  (1): LeakyReLU(negative_slope=0.01)
  (2): Linear(in_features=512, out_features=256, bias=True)
  (3): LeakyReLU(negative_slope=0.01)
  (4): Linear(in_features=256, out_features=128, bias=True)
  (5): LeakyReLU(negative_slope=0.01)
  (6): Linear(in_features=128, out_features=12, bias=True)
)
Critic MLP: Sequential(
  (0): Linear(in_features=430, out_features=512, bias=True)
  (1): LeakyReLU(negative_slope=0.01)
  (2): Linear(in_features=512, out_features=256, bias=True)
  (3): LeakyReLU(negative_slope=0.01)
  (4): Linear(in_features=256, out_features=128, bias=True)
  (5): LeakyReLU(negative_slope=0.01)
  (6): Linear(in_features=128, out_features=1, bias=True)
)
Traceback (most recent call last):
  File "eval_noise.py", line 183, in <module>
    eval_all_noise(
  File "eval_noise.py", line 168, in eval_all_noise
    eval_res = noisy_env.get_result()
  File "/home/jijingtian/project/LipsRobot/legged_gym/envs/base/noise_wrapper.py", line 73, in get_result
    for i in range(len(self.eval_config)):
TypeError: object of type 'NoneType' has no len()
Importing module 'gym_38' (/home/jijingtian/isaacgym/python/isaacgym/_bindings/linux-x86_64/gym_38.so)
Setting GYM_USD_PLUG_INFO_PATH to /home/jijingtian/isaacgym/python/isaacgym/_bindings/linux-x86_64/usd/plugInfo.json
PyTorch version 2.0.1+cu117
Device count 4
/home/jijingtian/isaacgym/python/isaacgym/_bindings/src/gymtorch
Using /home/jijingtian/.cache/torch_extensions/py38_cu117 as PyTorch extensions root...
Emitting ninja build file /home/jijingtian/.cache/torch_extensions/py38_cu117/gymtorch/build.ninja...
Building extension module gymtorch...
Allowing ninja to set a default number of workers... (overridable by setting the environment variable MAX_JOBS=N)
ninja: no work to do.
Not connected to PVD
+++ Using GPU PhysX
Physics Engine: PhysX
Physics Device: cuda:1
GPU Pipeline: enabled
Loading extension module gymtorch...
/home/jijingtian/miniconda3/envs/terrain/lib/python3.8/site-packages/torch/functional.py:504: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3483.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
graphics_device_id: -1
sim_device_id: 1
Num bodies:  17
Bodies:  ['base', 'FL_hip', 'FL_thigh', 'FL_calf', 'FL_foot', 'FR_hip', 'FR_thigh', 'FR_calf', 'FR_foot', 'RL_hip', 'RL_thigh', 'RL_calf', 'RL_foot', 'RR_hip', 'RR_thigh', 'RR_calf', 'RR_foot']
ActorCritic.__init__ got unexpected arguments, which will be ignored: ['init_noise_std']
Actor MLP: Sequential(
  (0): Linear(in_features=240, out_features=512, bias=True)
  (1): LeakyReLU(negative_slope=0.01)
  (2): Linear(in_features=512, out_features=256, bias=True)
  (3): LeakyReLU(negative_slope=0.01)
  (4): Linear(in_features=256, out_features=128, bias=True)
  (5): LeakyReLU(negative_slope=0.01)
  (6): Linear(in_features=128, out_features=12, bias=True)
)
Critic MLP: Sequential(
  (0): Linear(in_features=430, out_features=512, bias=True)
  (1): LeakyReLU(negative_slope=0.01)
  (2): Linear(in_features=512, out_features=256, bias=True)
  (3): LeakyReLU(negative_slope=0.01)
  (4): Linear(in_features=256, out_features=128, bias=True)
  (5): LeakyReLU(negative_slope=0.01)
  (6): Linear(in_features=128, out_features=1, bias=True)
)
Traceback (most recent call last):
  File "eval_noise.py", line 183, in <module>
    eval_all_noise(
  File "eval_noise.py", line 172, in eval_all_noise
    np.save(eval_file_name, eval_res)
  File "<__array_function__ internals>", line 180, in save
  File "/home/jijingtian/miniconda3/envs/terrain/lib/python3.8/site-packages/numpy/lib/npyio.py", line 518, in save
    file_ctx = open(file, "wb")
OSError: [Errno 36] File name too long: 'logs/Eval2/Expert-MLP-noise_type-gaussian-noise_level-3-Expert-MLP-noise_type-gaussian-noise_level-2-Expert-MLP-noise_type-gaussian-noise_level-1-Expert-MLP-noise_type-uniform-noise_level-3-Expert-MLP-noise_type-uniform-noise_level-2-Expert-MLP-noise_type-uniform-noise_level-1-debug.npy'
Importing module 'gym_38' (/home/jijingtian/isaacgym/python/isaacgym/_bindings/linux-x86_64/gym_38.so)
Setting GYM_USD_PLUG_INFO_PATH to /home/jijingtian/isaacgym/python/isaacgym/_bindings/linux-x86_64/usd/plugInfo.json
PyTorch version 2.0.1+cu117
Device count 4
/home/jijingtian/isaacgym/python/isaacgym/_bindings/src/gymtorch
Using /home/jijingtian/.cache/torch_extensions/py38_cu117 as PyTorch extensions root...
Emitting ninja build file /home/jijingtian/.cache/torch_extensions/py38_cu117/gymtorch/build.ninja...
Building extension module gymtorch...
Allowing ninja to set a default number of workers... (overridable by setting the environment variable MAX_JOBS=N)
ninja: no work to do.
Not connected to PVD
+++ Using GPU PhysX
Physics Engine: PhysX
Physics Device: cuda:1
GPU Pipeline: enabled
Loading extension module gymtorch...
/home/jijingtian/miniconda3/envs/terrain/lib/python3.8/site-packages/torch/functional.py:504: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3483.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
graphics_device_id: -1
sim_device_id: 1
Num bodies:  17
Bodies:  ['base', 'FL_hip', 'FL_thigh', 'FL_calf', 'FL_foot', 'FR_hip', 'FR_thigh', 'FR_calf', 'FR_foot', 'RL_hip', 'RL_thigh', 'RL_calf', 'RL_foot', 'RR_hip', 'RR_thigh', 'RR_calf', 'RR_foot']
ActorCritic.__init__ got unexpected arguments, which will be ignored: ['init_noise_std']
Actor MLP: Sequential(
  (0): Linear(in_features=240, out_features=512, bias=True)
  (1): LeakyReLU(negative_slope=0.01)
  (2): Linear(in_features=512, out_features=256, bias=True)
  (3): LeakyReLU(negative_slope=0.01)
  (4): Linear(in_features=256, out_features=128, bias=True)
  (5): LeakyReLU(negative_slope=0.01)
  (6): Linear(in_features=128, out_features=12, bias=True)
)
Critic MLP: Sequential(
  (0): Linear(in_features=430, out_features=512, bias=True)
  (1): LeakyReLU(negative_slope=0.01)
  (2): Linear(in_features=512, out_features=256, bias=True)
  (3): LeakyReLU(negative_slope=0.01)
  (4): Linear(in_features=256, out_features=128, bias=True)
  (5): LeakyReLU(negative_slope=0.01)
  (6): Linear(in_features=128, out_features=1, bias=True)
)
Eval Done
